/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/select/index';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/core/portal/portal-directives';
import * as import4 from '@angular/material/core/overlay/overlay-directives';
import * as import5 from '@angular/material/core/compatibility/compatibility';
import * as import6 from '@angular/material/core/ripple/ripple';
import * as import7 from '@angular/material/core/option/option';
import * as import8 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import9 from '@angular/material/core/overlay/overlay';
import * as import10 from '@angular/material/core/overlay/overlay-container';
import * as import11 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import12 from '@angular/material/core/overlay/position/viewport-ruler';
var MdSelectModuleInjector = (function (_super) {
    __extends(MdSelectModuleInjector, _super);
    function MdSelectModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdSelectModuleInjector.prototype, "_NgLocalization_7", {
        get: function () {
            if ((this.__NgLocalization_7 == null)) {
                (this.__NgLocalization_7 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_7;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelectModuleInjector.prototype, "_OverlayContainer_8", {
        get: function () {
            if ((this.__OverlayContainer_8 == null)) {
                (this.__OverlayContainer_8 = import10.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import10.OverlayContainer, null)));
            }
            return this.__OverlayContainer_8;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelectModuleInjector.prototype, "_ScrollDispatcher_9", {
        get: function () {
            if ((this.__ScrollDispatcher_9 == null)) {
                (this.__ScrollDispatcher_9 = import11.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import11.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_9;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelectModuleInjector.prototype, "_ViewportRuler_10", {
        get: function () {
            if ((this.__ViewportRuler_10 == null)) {
                (this.__ViewportRuler_10 = import12.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import12.ViewportRuler, null), this._ScrollDispatcher_9));
            }
            return this.__ViewportRuler_10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelectModuleInjector.prototype, "_OverlayPositionBuilder_11", {
        get: function () {
            if ((this.__OverlayPositionBuilder_11 == null)) {
                (this.__OverlayPositionBuilder_11 = new import8.OverlayPositionBuilder(this._ViewportRuler_10));
            }
            return this.__OverlayPositionBuilder_11;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelectModuleInjector.prototype, "_Overlay_12", {
        get: function () {
            if ((this.__Overlay_12 == null)) {
                (this.__Overlay_12 = new import9.Overlay(this._OverlayContainer_8, this.componentFactoryResolver, this._OverlayPositionBuilder_11, this.parent.get(import0.ApplicationRef), this, this.parent.get(import0.NgZone)));
            }
            return this.__Overlay_12;
        },
        enumerable: true,
        configurable: true
    });
    MdSelectModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._PortalModule_1 = new import3.PortalModule();
        this._OverlayModule_2 = new import4.OverlayModule();
        this._CompatibilityModule_3 = new import5.CompatibilityModule();
        this._MdRippleModule_4 = new import6.MdRippleModule();
        this._MdOptionModule_5 = new import7.MdOptionModule();
        this._MdSelectModule_6 = new import1.MdSelectModule();
        return this._MdSelectModule_6;
    };
    MdSelectModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.PortalModule)) {
            return this._PortalModule_1;
        }
        if ((token === import4.OverlayModule)) {
            return this._OverlayModule_2;
        }
        if ((token === import5.CompatibilityModule)) {
            return this._CompatibilityModule_3;
        }
        if ((token === import6.MdRippleModule)) {
            return this._MdRippleModule_4;
        }
        if ((token === import7.MdOptionModule)) {
            return this._MdOptionModule_5;
        }
        if ((token === import1.MdSelectModule)) {
            return this._MdSelectModule_6;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_7;
        }
        if ((token === import10.OverlayContainer)) {
            return this._OverlayContainer_8;
        }
        if ((token === import11.ScrollDispatcher)) {
            return this._ScrollDispatcher_9;
        }
        if ((token === import12.ViewportRuler)) {
            return this._ViewportRuler_10;
        }
        if ((token === import8.OverlayPositionBuilder)) {
            return this._OverlayPositionBuilder_11;
        }
        if ((token === import9.Overlay)) {
            return this._Overlay_12;
        }
        return notFoundResult;
    };
    MdSelectModuleInjector.prototype.destroyInternal = function () {
    };
    return MdSelectModuleInjector;
}(import0.ÉµNgModuleInjector));
export var MdSelectModuleNgFactory = new import0.NgModuleFactory(MdSelectModuleInjector, import1.MdSelectModule);
