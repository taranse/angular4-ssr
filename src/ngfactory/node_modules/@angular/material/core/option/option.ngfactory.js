/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/core/option/option';
import * as import2 from '@angular/material/core/compatibility/compatibility';
import * as import3 from '@angular/material/core/ripple/ripple';
import * as import4 from '@angular/common';
import * as import5 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import6 from '@angular/material/core/overlay/position/viewport-ruler';
var MdOptionModuleInjector = (function (_super) {
    __extends(MdOptionModuleInjector, _super);
    function MdOptionModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdOptionModuleInjector.prototype, "_ScrollDispatcher_4", {
        get: function () {
            if ((this.__ScrollDispatcher_4 == null)) {
                (this.__ScrollDispatcher_4 = import5.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import5.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOptionModuleInjector.prototype, "_ViewportRuler_5", {
        get: function () {
            if ((this.__ViewportRuler_5 == null)) {
                (this.__ViewportRuler_5 = import6.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import6.ViewportRuler, null), this._ScrollDispatcher_4));
            }
            return this.__ViewportRuler_5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOptionModuleInjector.prototype, "_NgLocalization_6", {
        get: function () {
            if ((this.__NgLocalization_6 == null)) {
                (this.__NgLocalization_6 = new import4.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_6;
        },
        enumerable: true,
        configurable: true
    });
    MdOptionModuleInjector.prototype.createInternal = function () {
        this._CompatibilityModule_0 = new import2.CompatibilityModule();
        this._MdRippleModule_1 = new import3.MdRippleModule();
        this._CommonModule_2 = new import4.CommonModule();
        this._MdOptionModule_3 = new import1.MdOptionModule();
        return this._MdOptionModule_3;
    };
    MdOptionModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CompatibilityModule)) {
            return this._CompatibilityModule_0;
        }
        if ((token === import3.MdRippleModule)) {
            return this._MdRippleModule_1;
        }
        if ((token === import4.CommonModule)) {
            return this._CommonModule_2;
        }
        if ((token === import1.MdOptionModule)) {
            return this._MdOptionModule_3;
        }
        if ((token === import5.ScrollDispatcher)) {
            return this._ScrollDispatcher_4;
        }
        if ((token === import6.ViewportRuler)) {
            return this._ViewportRuler_5;
        }
        if ((token === import4.NgLocalization)) {
            return this._NgLocalization_6;
        }
        return notFoundResult;
    };
    MdOptionModuleInjector.prototype.destroyInternal = function () {
    };
    return MdOptionModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdOptionModuleNgFactory = new import0.NgModuleFactory(MdOptionModuleInjector, import1.MdOptionModule);
var styles_MdOption = [];
export var RenderType_MdOption = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdOption,
    data: {}
});
function View_MdOption_1(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [
            [
                'class',
                'mat-option-ripple'
            ],
            [
                'md-ripple',
                ''
            ]
        ], [
            [
                2,
                'mat-ripple',
                null
            ],
            [
                2,
                'mat-ripple-unbounded',
                null
            ]
        ], null, null, null, null)),
        import0.ɵdid(335872, null, 0, import3.MdRipple, [
            import0.ElementRef,
            import0.NgZone,
            import6.ViewportRuler
        ], { trigger: [
                0,
                'trigger'
            ]
        }, null)
    ], function (ck, v) {
        var co = v.component;
        var currVal_2 = co._getHostElement();
        ck(v, 1, 0, currVal_2);
    }, function (ck, v) {
        var currVal_0 = true;
        var currVal_1 = import0.ɵnov(v, 1).unbounded;
        ck(v, 0, 0, currVal_0, currVal_1);
    });
}
export function View_MdOption_0(l) {
    return import0.ɵvid(0, [
        import0.ɵncd(null, 0),
        (l()(), import0.ɵand(8388608, null, null, 1, null, View_MdOption_1)),
        import0.ɵdid(8192, null, 0, import4.NgIf, [
            import0.ViewContainerRef,
            import0.TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null)
    ], function (ck, v) {
        var co = v.component;
        var currVal_0 = !co.disabled;
        ck(v, 2, 0, currVal_0);
    }, null);
}
function View_MdOption_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'md-option', [[
                'role',
                'option'
            ]
        ], [
            [
                1,
                'tabindex',
                0
            ],
            [
                2,
                'mat-selected',
                null
            ],
            [
                2,
                'mat-active',
                null
            ],
            [
                8,
                'id',
                0
            ],
            [
                1,
                'aria-selected',
                0
            ],
            [
                1,
                'aria-disabled',
                0
            ],
            [
                2,
                'mat-option-disabled',
                null
            ],
            [
                2,
                'mat-option',
                null
            ]
        ], [
            [
                null,
                'click'
            ],
            [
                null,
                'keydown'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (import0.ɵnov(v, 1)._selectViaInteraction() !== false);
                ad = (pd_0 && ad);
            }
            if (('keydown' === en)) {
                var pd_1 = (import0.ɵnov(v, 1)._handleKeydown($event) !== false);
                ad = (pd_1 && ad);
            }
            return ad;
        }, View_MdOption_0, RenderType_MdOption)),
        import0.ɵdid(24576, null, 0, import1.MdOption, [
            import0.ElementRef,
            import0.Renderer
        ], null, null)
    ], null, function (ck, v) {
        var currVal_0 = import0.ɵnov(v, 1)._getTabIndex();
        var currVal_1 = import0.ɵnov(v, 1).selected;
        var currVal_2 = import0.ɵnov(v, 1).active;
        var currVal_3 = import0.ɵnov(v, 1).id;
        var currVal_4 = import0.ɵnov(v, 1).selected.toString();
        var currVal_5 = import0.ɵnov(v, 1).disabled.toString();
        var currVal_6 = import0.ɵnov(v, 1).disabled;
        var currVal_7 = true;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7);
    });
}
export var MdOptionNgFactory = import0.ɵccf('md-option, mat-option', import1.MdOption, View_MdOption_Host_0, {
    value: 'value',
    disabled: 'disabled'
}, { onSelect: 'onSelect' }, ['*']);
