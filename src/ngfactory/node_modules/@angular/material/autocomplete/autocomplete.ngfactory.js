/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './autocomplete.css.ngstyle';
import * as import1 from '@angular/core';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/autocomplete/autocomplete';
var styles_MdAutocomplete = [import0.styles];
export var RenderType_MdAutocomplete = import1.ɵcrt({
    encapsulation: 2,
    styles: styles_MdAutocomplete,
    data: {}
});
function View_MdAutocomplete_1(l) {
    return import1.ɵvid(0, [
        (l()(), import1.ɵeld(0, [
            [
                2,
                0
            ],
            [
                'panel',
                1
            ]
        ], null, 2, 'div', [
            [
                'class',
                'mat-autocomplete-panel'
            ],
            [
                'role',
                'listbox'
            ]
        ], [[
                8,
                'id',
                0
            ]
        ], null, null, null, null)),
        import1.ɵdid(139264, null, 0, import2.NgClass, [
            import1.IterableDiffers,
            import1.KeyValueDiffers,
            import1.ElementRef,
            import1.Renderer
        ], {
            klass: [
                0,
                'klass'
            ],
            ngClass: [
                1,
                'ngClass'
            ]
        }, null),
        import1.ɵncd(null, 0)
    ], function (ck, v) {
        var co = v.component;
        var currVal_1 = 'mat-autocomplete-panel';
        var currVal_2 = co._getClassList();
        ck(v, 1, 0, currVal_1, currVal_2);
    }, function (ck, v) {
        var co = v.component;
        var currVal_0 = co.id;
        ck(v, 0, 0, currVal_0);
    });
}
export function View_MdAutocomplete_0(l) {
    return import1.ɵvid(0, [
        import1.ɵqud(201326592, 1, { template: 0 }),
        import1.ɵqud(335544320, 2, { panel: 0 }),
        (l()(), import1.ɵand(0, [[
                1,
                2
            ]
        ], null, 0, null, View_MdAutocomplete_1))
    ], null, null);
}
function View_MdAutocomplete_Host_0(l) {
    return import1.ɵvid(0, [
        (l()(), import1.ɵeld(0, null, null, 2, 'md-autocomplete', [], [[
                2,
                'mat-autocomplete',
                null
            ]
        ], null, null, View_MdAutocomplete_0, RenderType_MdAutocomplete)),
        import1.ɵdid(24576, null, 1, import3.MdAutocomplete, [], null, null),
        import1.ɵqud(301989888, 1, { options: 1 })
    ], null, function (ck, v) {
        var currVal_0 = true;
        ck(v, 0, 0, currVal_0);
    });
}
export var MdAutocompleteNgFactory = import1.ɵccf('md-autocomplete, mat-autocomplete', import3.MdAutocomplete, View_MdAutocomplete_Host_0, { displayWith: 'displayWith' }, {}, ['*']);
