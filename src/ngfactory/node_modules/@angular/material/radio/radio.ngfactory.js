/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/radio/radio';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/core/compatibility/compatibility';
import * as import4 from '@angular/material/core/ripple/ripple';
import * as import5 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import6 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import7 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import8 from './radio.css.ngstyle';
var MdRadioModuleInjector = (function (_super) {
    __extends(MdRadioModuleInjector, _super);
    function MdRadioModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdRadioModuleInjector.prototype, "_NgLocalization_4", {
        get: function () {
            if ((this.__NgLocalization_4 == null)) {
                (this.__NgLocalization_4 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioModuleInjector.prototype, "_ScrollDispatcher_5", {
        get: function () {
            if ((this.__ScrollDispatcher_5 == null)) {
                (this.__ScrollDispatcher_5 = import5.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import5.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioModuleInjector.prototype, "_ViewportRuler_6", {
        get: function () {
            if ((this.__ViewportRuler_6 == null)) {
                (this.__ViewportRuler_6 = import6.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import6.ViewportRuler, null), this._ScrollDispatcher_5));
            }
            return this.__ViewportRuler_6;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioModuleInjector.prototype, "_UniqueSelectionDispatcher_7", {
        get: function () {
            if ((this.__UniqueSelectionDispatcher_7 == null)) {
                (this.__UniqueSelectionDispatcher_7 = import7.UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import7.UniqueSelectionDispatcher, null)));
            }
            return this.__UniqueSelectionDispatcher_7;
        },
        enumerable: true,
        configurable: true
    });
    MdRadioModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._CompatibilityModule_1 = new import3.CompatibilityModule();
        this._MdRippleModule_2 = new import4.MdRippleModule();
        this._MdRadioModule_3 = new import1.MdRadioModule();
        return this._MdRadioModule_3;
    };
    MdRadioModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.CompatibilityModule)) {
            return this._CompatibilityModule_1;
        }
        if ((token === import4.MdRippleModule)) {
            return this._MdRippleModule_2;
        }
        if ((token === import1.MdRadioModule)) {
            return this._MdRadioModule_3;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_4;
        }
        if ((token === import5.ScrollDispatcher)) {
            return this._ScrollDispatcher_5;
        }
        if ((token === import6.ViewportRuler)) {
            return this._ViewportRuler_6;
        }
        if ((token === import7.UniqueSelectionDispatcher)) {
            return this._UniqueSelectionDispatcher_7;
        }
        return notFoundResult;
    };
    MdRadioModuleInjector.prototype.destroyInternal = function () {
    };
    return MdRadioModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdRadioModuleNgFactory = new import0.NgModuleFactory(MdRadioModuleInjector, import1.MdRadioModule);
var styles_MdRadioButton = [import8.styles];
export var RenderType_MdRadioButton = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdRadioButton,
    data: {}
});
function View_MdRadioButton_1(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [
            [
                'class',
                'mat-radio-ripple'
            ],
            [
                'md-ripple',
                ''
            ]
        ], [
            [
                2,
                'mat-ripple',
                null
            ],
            [
                2,
                'mat-ripple-unbounded',
                null
            ]
        ], null, null, null, null)),
        import0.ɵdid(335872, null, 0, import4.MdRipple, [
            import0.ElementRef,
            import0.NgZone,
            import6.ViewportRuler
        ], {
            trigger: [
                0,
                'trigger'
            ],
            centered: [
                1,
                'centered'
            ],
            speedFactor: [
                2,
                'speedFactor'
            ]
        }, null)
    ], function (ck, v) {
        var currVal_2 = import0.ɵnov(v.parent, 1);
        var currVal_3 = true;
        var currVal_4 = 0.3;
        ck(v, 1, 0, currVal_2, currVal_3, currVal_4);
    }, function (ck, v) {
        var currVal_0 = true;
        var currVal_1 = import0.ɵnov(v, 1).unbounded;
        ck(v, 0, 0, currVal_0, currVal_1);
    });
}
export function View_MdRadioButton_0(l) {
    return import0.ɵvid(0, [
        import0.ɵqud(201326592, 1, { _inputElement: 0 }),
        (l()(), import0.ɵeld(0, [[
                'label',
                1
            ]
        ], null, 8, 'label', [[
                'class',
                'mat-radio-label'
            ]
        ], [[
                1,
                'for',
                0
            ]
        ], null, null, null, null)),
        (l()(), import0.ɵeld(0, null, null, 4, 'div', [[
                'class',
                'mat-radio-container'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-radio-outer-circle'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-radio-inner-circle'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵand(8388608, null, null, 1, null, View_MdRadioButton_1)),
        import0.ɵdid(8192, null, 0, import2.NgIf, [
            import0.ViewContainerRef,
            import0.TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        (l()(), import0.ɵeld(0, [
            [
                1,
                0
            ],
            [
                'input',
                1
            ]
        ], null, 0, 'input', [
            [
                'class',
                'mat-radio-input cdk-visually-hidden'
            ],
            [
                'type',
                'radio'
            ]
        ], [
            [
                8,
                'id',
                0
            ],
            [
                8,
                'checked',
                0
            ],
            [
                8,
                'disabled',
                0
            ],
            [
                8,
                'name',
                0
            ],
            [
                1,
                'aria-label',
                0
            ],
            [
                1,
                'aria-labelledby',
                0
            ]
        ], [
            [
                null,
                'change'
            ],
            [
                null,
                'focus'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'click'
            ]
        ], function (v, en, $event) {
            var ad = true;
            var co = v.component;
            if (('change' === en)) {
                var pd_0 = (co._onInputChange($event) !== false);
                ad = (pd_0 && ad);
            }
            if (('focus' === en)) {
                var pd_1 = (co._onInputFocus() !== false);
                ad = (pd_1 && ad);
            }
            if (('blur' === en)) {
                var pd_2 = (co._onInputBlur() !== false);
                ad = (pd_2 && ad);
            }
            if (('click' === en)) {
                var pd_3 = (co._onInputClick($event) !== false);
                ad = (pd_3 && ad);
            }
            return ad;
        }, null, null)),
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [[
                'class',
                'mat-radio-label-content'
            ]
        ], [[
                2,
                'mat-radio-label-before',
                null
            ]
        ], null, null, null, null)),
        import0.ɵncd(null, 0)
    ], function (ck, v) {
        var co = v.component;
        var currVal_1 = !co._isRippleDisabled();
        ck(v, 6, 0, currVal_1);
    }, function (ck, v) {
        var co = v.component;
        var currVal_0 = co.inputId;
        ck(v, 1, 0, currVal_0);
        var currVal_2 = co.inputId;
        var currVal_3 = co.checked;
        var currVal_4 = co.disabled;
        var currVal_5 = co.name;
        var currVal_6 = co.ariaLabel;
        var currVal_7 = co.ariaLabelledby;
        ck(v, 7, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7);
        var currVal_8 = (co.labelPosition == 'before');
        ck(v, 8, 0, currVal_8);
    });
}
function View_MdRadioButton_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'md-radio-button', [], [
            [
                2,
                'mat-radio-button',
                null
            ],
            [
                2,
                'mat-radio-focused',
                null
            ],
            [
                8,
                'id',
                0
            ],
            [
                2,
                'mat-radio-checked',
                null
            ],
            [
                2,
                'mat-radio-disabled',
                null
            ]
        ], null, null, View_MdRadioButton_0, RenderType_MdRadioButton)),
        import0.ɵdid(57344, null, 0, import1.MdRadioButton, [
            [
                2,
                import1.MdRadioGroup
            ],
            import0.ElementRef,
            import0.Renderer,
            import7.UniqueSelectionDispatcher
        ], null, null)
    ], function (ck, v) {
        ck(v, 1, 0);
    }, function (ck, v) {
        var currVal_0 = true;
        var currVal_1 = import0.ɵnov(v, 1)._isFocused;
        var currVal_2 = import0.ɵnov(v, 1).id;
        var currVal_3 = import0.ɵnov(v, 1).checked;
        var currVal_4 = import0.ɵnov(v, 1).disabled;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4);
    });
}
export var MdRadioButtonNgFactory = import0.ɵccf('md-radio-button, mat-radio-button', import1.MdRadioButton, View_MdRadioButton_Host_0, {
    id: 'id',
    name: 'name',
    ariaLabel: 'aria-label',
    ariaLabelledby: 'aria-labelledby',
    disableRipple: 'disableRipple',
    checked: 'checked',
    value: 'value',
    align: 'align',
    labelPosition: 'labelPosition',
    disabled: 'disabled'
}, { change: 'change' }, ['*']);
