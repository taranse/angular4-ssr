/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/grid-list/grid-list';
import * as import2 from '@angular/material/core/compatibility/compatibility';
import * as import3 from '@angular/material/core/line/line';
import * as import4 from './grid-list.css.ngstyle';
import * as import5 from '@angular/material/core/rtl/dir';
var MdGridListModuleInjector = (function (_super) {
    __extends(MdGridListModuleInjector, _super);
    function MdGridListModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    MdGridListModuleInjector.prototype.createInternal = function () {
        this._CompatibilityModule_0 = new import2.CompatibilityModule();
        this._MdLineModule_1 = new import3.MdLineModule();
        this._MdGridListModule_2 = new import1.MdGridListModule();
        return this._MdGridListModule_2;
    };
    MdGridListModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CompatibilityModule)) {
            return this._CompatibilityModule_0;
        }
        if ((token === import3.MdLineModule)) {
            return this._MdLineModule_1;
        }
        if ((token === import1.MdGridListModule)) {
            return this._MdGridListModule_2;
        }
        return notFoundResult;
    };
    MdGridListModuleInjector.prototype.destroyInternal = function () {
    };
    return MdGridListModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdGridListModuleNgFactory = new import0.NgModuleFactory(MdGridListModuleInjector, import1.MdGridListModule);
var styles_MdGridList = [import4.styles];
export var RenderType_MdGridList = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdGridList,
    data: {}
});
export function View_MdGridList_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [], null, null, null, null, null)),
        import0.ɵncd(null, 0)
    ], null, null);
}
function View_MdGridList_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 2, 'md-grid-list', [[
                'role',
                'list'
            ]
        ], [[
                2,
                'mat-grid-list',
                null
            ]
        ], null, null, View_MdGridList_0, RenderType_MdGridList)),
        import0.ɵdid(1105920, null, 1, import1.MdGridList, [
            import0.Renderer,
            import0.ElementRef,
            [
                2,
                import5.Dir
            ]
        ], null, null),
        import0.ɵqud(301989888, 1, { _tiles: 1 })
    ], function (ck, v) {
        ck(v, 1, 0);
    }, function (ck, v) {
        var currVal_0 = true;
        ck(v, 0, 0, currVal_0);
    });
}
export var MdGridListNgFactory = import0.ɵccf('md-grid-list, mat-grid-list', import1.MdGridList, View_MdGridList_Host_0, {
    cols: 'cols',
    gutterSize: 'gutterSize',
    rowHeight: 'rowHeight'
}, {}, ['*']);
