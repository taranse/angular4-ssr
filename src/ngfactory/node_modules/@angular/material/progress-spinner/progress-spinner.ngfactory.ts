/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */


import * as import0 from '@angular/core';
import * as import1 from '@angular/material/progress-spinner/progress-spinner';
import * as import2 from '@angular/material/core/compatibility/compatibility';
import * as import3 from './progress-spinner.css.shim.ngstyle';
class MdProgressSpinnerModuleInjector extends import0.ɵNgModuleInjector<import1.MdProgressSpinnerModule> {
  _CompatibilityModule_0:import2.CompatibilityModule;
  _MdProgressSpinnerModule_1:import1.MdProgressSpinnerModule;
  constructor(parent:import0.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  createInternal():import1.MdProgressSpinnerModule {
    this._CompatibilityModule_0 = new import2.CompatibilityModule();
    this._MdProgressSpinnerModule_1 = new import1.MdProgressSpinnerModule();
    return this._MdProgressSpinnerModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CompatibilityModule)) { return this._CompatibilityModule_0; }
    if ((token === import1.MdProgressSpinnerModule)) { return this._MdProgressSpinnerModule_1; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdProgressSpinnerModuleNgFactory:import0.NgModuleFactory<import1.MdProgressSpinnerModule> = new import0.NgModuleFactory<any>(MdProgressSpinnerModuleInjector,import1.MdProgressSpinnerModule);
const styles_MdProgressSpinner:any[] = [import3.styles];
export const RenderType_MdProgressSpinner:import0.RendererType2 = import0.ɵcrt({
  encapsulation: 0,
  styles: styles_MdProgressSpinner,
  data: {}
}
);
export function View_MdProgressSpinner_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(2,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,':svg:svg',[
      [
        'preserveAspectRatio',
        'xMidYMid meet'
      ]
      ,
      [
        'viewBox',
        '0 0 100 100'
      ]

    ]
    ,(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵeld(0,(null as any),(null as any),0,':svg:path',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)))
  ]
  ,(null as any),(null as any));
}
function View_MdProgressSpinner_Host_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
      (l()(),import0.ɵeld(0,(null as any),(null as any),1,'md-progress-spinner',[[
        'role',
        'progressbar'
      ]
    ],[
      [
        1,
        'aria-valuemin',
        0
      ]
      ,
      [
        1,
        'aria-valuemax',
        0
      ]
      ,
      [
        1,
        'aria-valuenow',
        0
      ]
      ,
      [
        1,
        'mode',
        0
      ]

    ]
    ,(null as any),(null as any),View_MdProgressSpinner_0,RenderType_MdProgressSpinner)),
    import0.ɵdid(90112,(null as any),0,import1.MdProgressSpinner,[
      import0.NgZone,
      import0.ElementRef,
      import0.Renderer
    ]
    ,(null as any),(null as any))
  ]
  ,(null as any),(ck,v) => {
    const currVal_0:any = import0.ɵnov(v,1)._ariaValueMin;
    const currVal_1:any = import0.ɵnov(v,1)._ariaValueMax;
    const currVal_2:any = import0.ɵnov(v,1).value;
    const currVal_3:any = import0.ɵnov(v,1).mode;
    ck(v,0,0,currVal_0,currVal_1,currVal_2,currVal_3);
  });
}
export const MdProgressSpinnerNgFactory:import0.ComponentFactory<import1.MdProgressSpinner> = import0.ɵccf('md-progress-spinner, mat-progress-spinner, md-progress-circle, mat-progress-circle',import1.MdProgressSpinner,View_MdProgressSpinner_Host_0,{
  color: 'color',
  value: 'value',
  mode: 'mode'
}
,{},([] as any[]));
const styles_MdSpinner:any[] = [import3.styles];
export const RenderType_MdSpinner:import0.RendererType2 = import0.ɵcrt({
  encapsulation: 0,
  styles: styles_MdSpinner,
  data: {}
}
);
export function View_MdSpinner_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,':svg:svg',[
      [
        'preserveAspectRatio',
        'xMidYMid meet'
      ]
      ,
      [
        'viewBox',
        '0 0 100 100'
      ]

    ]
    ,(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵeld(0,(null as any),(null as any),0,':svg:path',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)))
  ]
  ,(null as any),(null as any));
}
function View_MdSpinner_Host_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'md-spinner',[
      [
        'mode',
        'indeterminate'
      ]
      ,
      [
        'role',
        'progressbar'
      ]

    ]
    ,[
      [
        2,
        'mat-spinner',
        (null as any)
      ]
      ,
      [
        1,
        'aria-valuenow',
        0
      ]
      ,
      [
        1,
        'mode',
        0
      ]

    ]
    ,(null as any),(null as any),View_MdSpinner_0,RenderType_MdSpinner)),
    import0.ɵdid(90112,(null as any),0,import1.MdSpinner,[
      import0.ElementRef,
      import0.NgZone,
      import0.Renderer
    ]
    ,(null as any),(null as any))
  ]
  ,(null as any),(ck,v) => {
    const currVal_0:any = true;
    const currVal_1:any = import0.ɵnov(v,1).value;
    const currVal_2:any = import0.ɵnov(v,1).mode;
    ck(v,0,0,currVal_0,currVal_1,currVal_2);
  });
}
export const MdSpinnerNgFactory:import0.ComponentFactory<import1.MdSpinner> = import0.ɵccf('md-spinner, mat-spinner',import1.MdSpinner,View_MdSpinner_Host_0,{
  color: 'color',
  value: 'value',
  mode: 'mode'
}
,{},([] as any[]));
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiRDovV29yay9hbmd1bGFyMi1zZXJ2ZXItdGVzdC9hbmd1bGFyNC1zc3Ivbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXIvcHJvZ3Jlc3Mtc3Bpbm5lci5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9EOi9Xb3JrL2FuZ3VsYXIyLXNlcnZlci10ZXN0L2FuZ3VsYXI0LXNzci9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLmQudHMiLCJuZzovLy9EOi9Xb3JrL2FuZ3VsYXIyLXNlcnZlci10ZXN0L2FuZ3VsYXI0LXNzci9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLmh0bWwiLCJuZzovLy9EOi9Xb3JrL2FuZ3VsYXIyLXNlcnZlci10ZXN0L2FuZ3VsYXI0LXNzci9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLmQudHMuTWRQcm9ncmVzc1NwaW5uZXJfSG9zdC5odG1sIiwibmc6Ly8vRDovV29yay9hbmd1bGFyMi1zZXJ2ZXItdGVzdC9hbmd1bGFyNC1zc3Ivbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXIvcHJvZ3Jlc3Mtc3Bpbm5lci5kLnRzLk1kU3Bpbm5lcl9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxzdmcgdmlld0JveD1cIjAgMCAxMDAgMTAwXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIj48cGF0aD48L3BhdGg+PC9zdmc+IiwiPG1kLXByb2dyZXNzLXNwaW5uZXI+PC9tZC1wcm9ncmVzcy1zcGlubmVyPiIsIjxtZC1zcGlubmVyPjwvbWQtc3Bpbm5lcj4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQ0FBO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtJQUErRDs7Ozs7O01DQS9EO1FBQUE7UUFBQTtNQUFBO0lBQUE7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7Ozs7SUFBQTtLQUFBOzs7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBLFNBQUEsdUNBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztJREFBO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtJQUErRDs7Ozs7O0lFQS9EO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7Ozs7SUFBQTtLQUFBOzs7SUFBQTtJQUFBO0lBQUE7SUFBQSxTQUFBLDZCQUFBOzs7Ozs7OzsifQ==
