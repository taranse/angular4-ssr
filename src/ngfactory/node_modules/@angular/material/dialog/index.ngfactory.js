/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/dialog/index';
import * as import2 from '@angular/material/core/portal/portal-directives';
import * as import3 from '@angular/material/core/overlay/overlay-directives';
import * as import4 from '@angular/common';
import * as import5 from '@angular/material/core/platform/index';
import * as import6 from '@angular/material/core/a11y/index';
import * as import7 from '@angular/material/core/compatibility/compatibility';
import * as import8 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import9 from '@angular/material/core/overlay/overlay';
import * as import10 from '@angular/material/core/platform/platform';
import * as import11 from '@angular/material/core/a11y/interactivity-checker';
import * as import12 from '@angular/material/dialog/dialog';
import * as import13 from './dialog-container.ngfactory';
import * as import14 from '@angular/material/core/overlay/overlay-container';
import * as import15 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import16 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import17 from '@angular/material/core/a11y/live-announcer';
var MdDialogModuleInjector = (function (_super) {
    __extends(MdDialogModuleInjector, _super);
    function MdDialogModuleInjector(parent) {
        return _super.call(this, parent, [import13.MdDialogContainerNgFactory], []) || this;
    }
    Object.defineProperty(MdDialogModuleInjector.prototype, "_OverlayContainer_7", {
        get: function () {
            if ((this.__OverlayContainer_7 == null)) {
                (this.__OverlayContainer_7 = import14.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import14.OverlayContainer, null)));
            }
            return this.__OverlayContainer_7;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_ScrollDispatcher_8", {
        get: function () {
            if ((this.__ScrollDispatcher_8 == null)) {
                (this.__ScrollDispatcher_8 = import15.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import15.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_8;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_ViewportRuler_9", {
        get: function () {
            if ((this.__ViewportRuler_9 == null)) {
                (this.__ViewportRuler_9 = import16.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import16.ViewportRuler, null), this._ScrollDispatcher_8));
            }
            return this.__ViewportRuler_9;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_OverlayPositionBuilder_10", {
        get: function () {
            if ((this.__OverlayPositionBuilder_10 == null)) {
                (this.__OverlayPositionBuilder_10 = new import8.OverlayPositionBuilder(this._ViewportRuler_9));
            }
            return this.__OverlayPositionBuilder_10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_Overlay_11", {
        get: function () {
            if ((this.__Overlay_11 == null)) {
                (this.__Overlay_11 = new import9.Overlay(this._OverlayContainer_7, this.componentFactoryResolver, this._OverlayPositionBuilder_10, this.parent.get(import0.ApplicationRef), this, this.parent.get(import0.NgZone)));
            }
            return this.__Overlay_11;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_NgLocalization_12", {
        get: function () {
            if ((this.__NgLocalization_12 == null)) {
                (this.__NgLocalization_12 = new import4.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_12;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_Platform_13", {
        get: function () {
            if ((this.__Platform_13 == null)) {
                (this.__Platform_13 = new import10.Platform());
            }
            return this.__Platform_13;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_InteractivityChecker_14", {
        get: function () {
            if ((this.__InteractivityChecker_14 == null)) {
                (this.__InteractivityChecker_14 = new import11.InteractivityChecker(this._Platform_13));
            }
            return this.__InteractivityChecker_14;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_LiveAnnouncer_15", {
        get: function () {
            if ((this.__LiveAnnouncer_15 == null)) {
                (this.__LiveAnnouncer_15 = import17.LIVE_ANNOUNCER_PROVIDER_FACTORY(this.parent.get(import17.LiveAnnouncer, null), this.parent.get(import17.LIVE_ANNOUNCER_ELEMENT_TOKEN, null)));
            }
            return this.__LiveAnnouncer_15;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialogModuleInjector.prototype, "_MdDialog_16", {
        get: function () {
            if ((this.__MdDialog_16 == null)) {
                (this.__MdDialog_16 = new import12.MdDialog(this._Overlay_11, this, this.parent.get(import12.MdDialog, null)));
            }
            return this.__MdDialog_16;
        },
        enumerable: true,
        configurable: true
    });
    MdDialogModuleInjector.prototype.createInternal = function () {
        this._PortalModule_0 = new import2.PortalModule();
        this._OverlayModule_1 = new import3.OverlayModule();
        this._CommonModule_2 = new import4.CommonModule();
        this._PlatformModule_3 = new import5.PlatformModule();
        this._A11yModule_4 = new import6.A11yModule();
        this._CompatibilityModule_5 = new import7.CompatibilityModule();
        this._MdDialogModule_6 = new import1.MdDialogModule();
        return this._MdDialogModule_6;
    };
    MdDialogModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.PortalModule)) {
            return this._PortalModule_0;
        }
        if ((token === import3.OverlayModule)) {
            return this._OverlayModule_1;
        }
        if ((token === import4.CommonModule)) {
            return this._CommonModule_2;
        }
        if ((token === import5.PlatformModule)) {
            return this._PlatformModule_3;
        }
        if ((token === import6.A11yModule)) {
            return this._A11yModule_4;
        }
        if ((token === import7.CompatibilityModule)) {
            return this._CompatibilityModule_5;
        }
        if ((token === import1.MdDialogModule)) {
            return this._MdDialogModule_6;
        }
        if ((token === import14.OverlayContainer)) {
            return this._OverlayContainer_7;
        }
        if ((token === import15.ScrollDispatcher)) {
            return this._ScrollDispatcher_8;
        }
        if ((token === import16.ViewportRuler)) {
            return this._ViewportRuler_9;
        }
        if ((token === import8.OverlayPositionBuilder)) {
            return this._OverlayPositionBuilder_10;
        }
        if ((token === import9.Overlay)) {
            return this._Overlay_11;
        }
        if ((token === import4.NgLocalization)) {
            return this._NgLocalization_12;
        }
        if ((token === import10.Platform)) {
            return this._Platform_13;
        }
        if ((token === import11.InteractivityChecker)) {
            return this._InteractivityChecker_14;
        }
        if ((token === import17.LiveAnnouncer)) {
            return this._LiveAnnouncer_15;
        }
        if ((token === import12.MdDialog)) {
            return this._MdDialog_16;
        }
        return notFoundResult;
    };
    MdDialogModuleInjector.prototype.destroyInternal = function () {
    };
    return MdDialogModuleInjector;
}(import0.ÉµNgModuleInjector));
export var MdDialogModuleNgFactory = new import0.NgModuleFactory(MdDialogModuleInjector, import1.MdDialogModule);
