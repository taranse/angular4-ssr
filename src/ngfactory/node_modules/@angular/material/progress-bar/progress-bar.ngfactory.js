/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/progress-bar/progress-bar';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/core/compatibility/compatibility';
import * as import4 from './progress-bar.css.shim.ngstyle';
var MdProgressBarModuleInjector = (function (_super) {
    __extends(MdProgressBarModuleInjector, _super);
    function MdProgressBarModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdProgressBarModuleInjector.prototype, "_NgLocalization_3", {
        get: function () {
            if ((this.__NgLocalization_3 == null)) {
                (this.__NgLocalization_3 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_3;
        },
        enumerable: true,
        configurable: true
    });
    MdProgressBarModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._CompatibilityModule_1 = new import3.CompatibilityModule();
        this._MdProgressBarModule_2 = new import1.MdProgressBarModule();
        return this._MdProgressBarModule_2;
    };
    MdProgressBarModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.CompatibilityModule)) {
            return this._CompatibilityModule_1;
        }
        if ((token === import1.MdProgressBarModule)) {
            return this._MdProgressBarModule_2;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_3;
        }
        return notFoundResult;
    };
    MdProgressBarModuleInjector.prototype.destroyInternal = function () {
    };
    return MdProgressBarModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdProgressBarModuleNgFactory = new import0.NgModuleFactory(MdProgressBarModuleInjector, import1.MdProgressBarModule);
var styles_MdProgressBar = [import4.styles];
export var RenderType_MdProgressBar = import0.ɵcrt({
    encapsulation: 0,
    styles: styles_MdProgressBar,
    data: {}
});
export function View_MdProgressBar_0(l) {
    return import0.ɵvid(2, [
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-progress-bar-background mat-progress-bar-element'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [[
                'class',
                'mat-progress-bar-buffer mat-progress-bar-element'
            ]
        ], null, null, null, null, null)),
        import0.ɵdid(139264, null, 0, import2.NgStyle, [
            import0.KeyValueDiffers,
            import0.ElementRef,
            import0.Renderer
        ], { ngStyle: [
                0,
                'ngStyle'
            ]
        }, null),
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [[
                'class',
                'mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element'
            ]
        ], null, null, null, null, null)),
        import0.ɵdid(139264, null, 0, import2.NgStyle, [
            import0.KeyValueDiffers,
            import0.ElementRef,
            import0.Renderer
        ], { ngStyle: [
                0,
                'ngStyle'
            ]
        }, null),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element'
            ]
        ], null, null, null, null, null))
    ], function (ck, v) {
        var co = v.component;
        var currVal_0 = co._bufferTransform();
        ck(v, 2, 0, currVal_0);
        var currVal_1 = co._primaryTransform();
        ck(v, 4, 0, currVal_1);
    }, null);
}
function View_MdProgressBar_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'md-progress-bar', [
            [
                'aria-valuemax',
                '100'
            ],
            [
                'aria-valuemin',
                '0'
            ],
            [
                'role',
                'progressbar'
            ]
        ], [
            [
                2,
                'mat-primary',
                null
            ],
            [
                2,
                'mat-accent',
                null
            ],
            [
                2,
                'mat-warn',
                null
            ],
            [
                2,
                'mat-progress-bar',
                null
            ],
            [
                1,
                'aria-valuenow',
                0
            ],
            [
                1,
                'mode',
                0
            ]
        ], null, null, View_MdProgressBar_0, RenderType_MdProgressBar)),
        import0.ɵdid(24576, null, 0, import1.MdProgressBar, [], null, null)
    ], null, function (ck, v) {
        var currVal_0 = (import0.ɵnov(v, 1).color == 'primary');
        var currVal_1 = (import0.ɵnov(v, 1).color == 'accent');
        var currVal_2 = (import0.ɵnov(v, 1).color == 'warn');
        var currVal_3 = true;
        var currVal_4 = import0.ɵnov(v, 1).value;
        var currVal_5 = import0.ɵnov(v, 1).mode;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5);
    });
}
export var MdProgressBarNgFactory = import0.ɵccf('md-progress-bar, mat-progress-bar', import1.MdProgressBar, View_MdProgressBar_Host_0, {
    color: 'color',
    value: 'value',
    bufferValue: 'bufferValue',
    mode: 'mode'
}, {}, []);
