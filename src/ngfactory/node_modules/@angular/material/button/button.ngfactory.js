/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/button/button';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/core/compatibility/compatibility';
import * as import4 from '@angular/material/core/ripple/ripple';
import * as import5 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import6 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import7 from './button.css.ngstyle';
var MdButtonModuleInjector = (function (_super) {
    __extends(MdButtonModuleInjector, _super);
    function MdButtonModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdButtonModuleInjector.prototype, "_NgLocalization_4", {
        get: function () {
            if ((this.__NgLocalization_4 == null)) {
                (this.__NgLocalization_4 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonModuleInjector.prototype, "_ScrollDispatcher_5", {
        get: function () {
            if ((this.__ScrollDispatcher_5 == null)) {
                (this.__ScrollDispatcher_5 = import5.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import5.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonModuleInjector.prototype, "_ViewportRuler_6", {
        get: function () {
            if ((this.__ViewportRuler_6 == null)) {
                (this.__ViewportRuler_6 = import6.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import6.ViewportRuler, null), this._ScrollDispatcher_5));
            }
            return this.__ViewportRuler_6;
        },
        enumerable: true,
        configurable: true
    });
    MdButtonModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._CompatibilityModule_1 = new import3.CompatibilityModule();
        this._MdRippleModule_2 = new import4.MdRippleModule();
        this._MdButtonModule_3 = new import1.MdButtonModule();
        return this._MdButtonModule_3;
    };
    MdButtonModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.CompatibilityModule)) {
            return this._CompatibilityModule_1;
        }
        if ((token === import4.MdRippleModule)) {
            return this._MdRippleModule_2;
        }
        if ((token === import1.MdButtonModule)) {
            return this._MdButtonModule_3;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_4;
        }
        if ((token === import5.ScrollDispatcher)) {
            return this._ScrollDispatcher_5;
        }
        if ((token === import6.ViewportRuler)) {
            return this._ViewportRuler_6;
        }
        return notFoundResult;
    };
    MdButtonModuleInjector.prototype.destroyInternal = function () {
    };
    return MdButtonModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdButtonModuleNgFactory = new import0.NgModuleFactory(MdButtonModuleInjector, import1.MdButtonModule);
var styles_MdButton = [import7.styles];
export var RenderType_MdButton = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdButton,
    data: {}
});
function View_MdButton_1(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [
            [
                'class',
                'mat-button-ripple'
            ],
            [
                'md-ripple',
                ''
            ]
        ], [
            [
                2,
                'mat-button-ripple-round',
                null
            ],
            [
                2,
                'mat-ripple',
                null
            ],
            [
                2,
                'mat-ripple-unbounded',
                null
            ]
        ], null, null, null, null)),
        import0.ɵdid(335872, null, 0, import4.MdRipple, [
            import0.ElementRef,
            import0.NgZone,
            import6.ViewportRuler
        ], { trigger: [
                0,
                'trigger'
            ]
        }, null)
    ], function (ck, v) {
        var co = v.component;
        var currVal_3 = co._getHostElement();
        ck(v, 1, 0, currVal_3);
    }, function (ck, v) {
        var co = v.component;
        var currVal_0 = co._isRoundButton();
        var currVal_1 = true;
        var currVal_2 = import0.ɵnov(v, 1).unbounded;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2);
    });
}
export function View_MdButton_0(l) {
    return import0.ɵvid(2, [
        (l()(), import0.ɵeld(0, null, null, 1, 'span', [[
                'class',
                'mat-button-wrapper'
            ]
        ], null, null, null, null, null)),
        import0.ɵncd(null, 0),
        (l()(), import0.ɵted(null, ['\n'])),
        (l()(), import0.ɵand(8388608, null, null, 1, null, View_MdButton_1)),
        import0.ɵdid(8192, null, 0, import2.NgIf, [
            import0.ViewContainerRef,
            import0.TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        (l()(), import0.ɵted(null, ['\n'])),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-button-focus-overlay'
            ]
        ], null, [[
                null,
                'touchstart'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('touchstart' === en)) {
                var pd_0 = ($event.preventDefault() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)),
        (l()(), import0.ɵted(null, ['\n']))
    ], function (ck, v) {
        var co = v.component;
        var currVal_0 = !co._isRippleDisabled();
        ck(v, 4, 0, currVal_0);
    }, null);
}
function View_MdButton_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'button', [[
                'md-button',
                ''
            ]
        ], [
            [
                8,
                'disabled',
                0
            ],
            [
                2,
                'mat-button-focus',
                null
            ]
        ], [
            [
                null,
                'mousedown'
            ],
            [
                null,
                'focus'
            ],
            [
                null,
                'blur'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('mousedown' === en)) {
                var pd_0 = (import0.ɵnov(v, 1)._setMousedown() !== false);
                ad = (pd_0 && ad);
            }
            if (('focus' === en)) {
                var pd_1 = (import0.ɵnov(v, 1)._setKeyboardFocus() !== false);
                ad = (pd_1 && ad);
            }
            if (('blur' === en)) {
                var pd_2 = (import0.ɵnov(v, 1)._removeKeyboardFocus() !== false);
                ad = (pd_2 && ad);
            }
            return ad;
        }, View_MdButton_0, RenderType_MdButton)),
        import0.ɵdid(24576, null, 0, import1.MdButton, [
            import0.ElementRef,
            import0.Renderer
        ], null, null)
    ], null, function (ck, v) {
        var currVal_0 = import0.ɵnov(v, 1).disabled;
        var currVal_1 = import0.ɵnov(v, 1)._isKeyboardFocused;
        ck(v, 0, 0, currVal_0, currVal_1);
    });
}
export var MdButtonNgFactory = import0.ɵccf('button[md-button], button[md-raised-button], button[md-icon-button],button[md-fab], button[md-mini-fab],button[mat-button], button[mat-raised-button], button[mat-icon-button],button[mat-fab], button[mat-mini-fab]', import1.MdButton, View_MdButton_Host_0, {
    disableRipple: 'disableRipple',
    disabled: 'disabled',
    color: 'color'
}, {}, ['*']);
var styles_MdAnchor = [import7.styles];
export var RenderType_MdAnchor = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdAnchor,
    data: {}
});
function View_MdAnchor_1(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [
            [
                'class',
                'mat-button-ripple'
            ],
            [
                'md-ripple',
                ''
            ]
        ], [
            [
                2,
                'mat-button-ripple-round',
                null
            ],
            [
                2,
                'mat-ripple',
                null
            ],
            [
                2,
                'mat-ripple-unbounded',
                null
            ]
        ], null, null, null, null)),
        import0.ɵdid(335872, null, 0, import4.MdRipple, [
            import0.ElementRef,
            import0.NgZone,
            import6.ViewportRuler
        ], { trigger: [
                0,
                'trigger'
            ]
        }, null)
    ], function (ck, v) {
        var co = v.component;
        var currVal_3 = co._getHostElement();
        ck(v, 1, 0, currVal_3);
    }, function (ck, v) {
        var co = v.component;
        var currVal_0 = co._isRoundButton();
        var currVal_1 = true;
        var currVal_2 = import0.ɵnov(v, 1).unbounded;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2);
    });
}
export function View_MdAnchor_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'span', [[
                'class',
                'mat-button-wrapper'
            ]
        ], null, null, null, null, null)),
        import0.ɵncd(null, 0),
        (l()(), import0.ɵted(null, ['\n'])),
        (l()(), import0.ɵand(8388608, null, null, 1, null, View_MdAnchor_1)),
        import0.ɵdid(8192, null, 0, import2.NgIf, [
            import0.ViewContainerRef,
            import0.TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        (l()(), import0.ɵted(null, ['\n'])),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-button-focus-overlay'
            ]
        ], null, [[
                null,
                'touchstart'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('touchstart' === en)) {
                var pd_0 = ($event.preventDefault() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)),
        (l()(), import0.ɵted(null, ['\n']))
    ], function (ck, v) {
        var co = v.component;
        var currVal_0 = !co._isRippleDisabled();
        ck(v, 4, 0, currVal_0);
    }, null);
}
function View_MdAnchor_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'a', [[
                'md-button',
                ''
            ]
        ], [
            [
                1,
                'disabled',
                0
            ],
            [
                1,
                'aria-disabled',
                0
            ],
            [
                2,
                'mat-button-focus',
                null
            ],
            [
                8,
                'tabIndex',
                0
            ]
        ], [
            [
                null,
                'mousedown'
            ],
            [
                null,
                'focus'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'click'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('mousedown' === en)) {
                var pd_0 = (import0.ɵnov(v, 1)._setMousedown() !== false);
                ad = (pd_0 && ad);
            }
            if (('focus' === en)) {
                var pd_1 = (import0.ɵnov(v, 1)._setKeyboardFocus() !== false);
                ad = (pd_1 && ad);
            }
            if (('blur' === en)) {
                var pd_2 = (import0.ɵnov(v, 1)._removeKeyboardFocus() !== false);
                ad = (pd_2 && ad);
            }
            if (('click' === en)) {
                var pd_3 = (import0.ɵnov(v, 1)._haltDisabledEvents($event) !== false);
                ad = (pd_3 && ad);
            }
            return ad;
        }, View_MdAnchor_0, RenderType_MdAnchor)),
        import0.ɵdid(24576, null, 0, import1.MdAnchor, [
            import0.ElementRef,
            import0.Renderer
        ], null, null)
    ], null, function (ck, v) {
        var currVal_0 = import0.ɵnov(v, 1).disabled;
        var currVal_1 = import0.ɵnov(v, 1)._isAriaDisabled;
        var currVal_2 = import0.ɵnov(v, 1)._isKeyboardFocused;
        var currVal_3 = import0.ɵnov(v, 1).tabIndex;
        ck(v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3);
    });
}
export var MdAnchorNgFactory = import0.ɵccf('a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]', import1.MdAnchor, View_MdAnchor_Host_0, {
    disableRipple: 'disableRipple',
    disabled: 'disabled',
    color: 'color'
}, {}, ['*']);
