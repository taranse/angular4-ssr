/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/sidenav/sidenav';
import * as import2 from '@angular/common';
import * as import3 from '@angular/material/core/compatibility/compatibility';
import * as import4 from '@angular/material/core/platform/index';
import * as import5 from '@angular/material/core/a11y/index';
import * as import6 from '@angular/material/core/portal/portal-directives';
import * as import7 from '@angular/material/core/overlay/overlay-directives';
import * as import8 from '@angular/material/core/platform/platform';
import * as import9 from '@angular/material/core/a11y/interactivity-checker';
import * as import10 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import11 from '@angular/material/core/overlay/overlay';
import * as import12 from '@angular/material/core/a11y/live-announcer';
import * as import13 from '@angular/material/core/overlay/overlay-container';
import * as import14 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import15 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import16 from './sidenav.css.ngstyle';
import * as import17 from './sidenav-transitions.css.ngstyle';
import * as import18 from '@angular/material/core/overlay/scroll/scrollable';
import * as import19 from '@angular/material/core/rtl/dir';
import * as import20 from '../core/a11y/focus-trap.ngfactory';
import * as import21 from '@angular/material/core/a11y/focus-trap';
var MdSidenavModuleInjector = (function (_super) {
    __extends(MdSidenavModuleInjector, _super);
    function MdSidenavModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_NgLocalization_7", {
        get: function () {
            if ((this.__NgLocalization_7 == null)) {
                (this.__NgLocalization_7 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_7;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_Platform_8", {
        get: function () {
            if ((this.__Platform_8 == null)) {
                (this.__Platform_8 = new import8.Platform());
            }
            return this.__Platform_8;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_InteractivityChecker_9", {
        get: function () {
            if ((this.__InteractivityChecker_9 == null)) {
                (this.__InteractivityChecker_9 = new import9.InteractivityChecker(this._Platform_8));
            }
            return this.__InteractivityChecker_9;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_LiveAnnouncer_10", {
        get: function () {
            if ((this.__LiveAnnouncer_10 == null)) {
                (this.__LiveAnnouncer_10 = import12.LIVE_ANNOUNCER_PROVIDER_FACTORY(this.parent.get(import12.LiveAnnouncer, null), this.parent.get(import12.LIVE_ANNOUNCER_ELEMENT_TOKEN, null)));
            }
            return this.__LiveAnnouncer_10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_OverlayContainer_11", {
        get: function () {
            if ((this.__OverlayContainer_11 == null)) {
                (this.__OverlayContainer_11 = import13.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import13.OverlayContainer, null)));
            }
            return this.__OverlayContainer_11;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_ScrollDispatcher_12", {
        get: function () {
            if ((this.__ScrollDispatcher_12 == null)) {
                (this.__ScrollDispatcher_12 = import14.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import14.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_12;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_ViewportRuler_13", {
        get: function () {
            if ((this.__ViewportRuler_13 == null)) {
                (this.__ViewportRuler_13 = import15.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import15.ViewportRuler, null), this._ScrollDispatcher_12));
            }
            return this.__ViewportRuler_13;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_OverlayPositionBuilder_14", {
        get: function () {
            if ((this.__OverlayPositionBuilder_14 == null)) {
                (this.__OverlayPositionBuilder_14 = new import10.OverlayPositionBuilder(this._ViewportRuler_13));
            }
            return this.__OverlayPositionBuilder_14;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavModuleInjector.prototype, "_Overlay_15", {
        get: function () {
            if ((this.__Overlay_15 == null)) {
                (this.__Overlay_15 = new import11.Overlay(this._OverlayContainer_11, this.componentFactoryResolver, this._OverlayPositionBuilder_14, this.parent.get(import0.ApplicationRef), this, this.parent.get(import0.NgZone)));
            }
            return this.__Overlay_15;
        },
        enumerable: true,
        configurable: true
    });
    MdSidenavModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._CompatibilityModule_1 = new import3.CompatibilityModule();
        this._PlatformModule_2 = new import4.PlatformModule();
        this._A11yModule_3 = new import5.A11yModule();
        this._PortalModule_4 = new import6.PortalModule();
        this._OverlayModule_5 = new import7.OverlayModule();
        this._MdSidenavModule_6 = new import1.MdSidenavModule();
        return this._MdSidenavModule_6;
    };
    MdSidenavModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.CompatibilityModule)) {
            return this._CompatibilityModule_1;
        }
        if ((token === import4.PlatformModule)) {
            return this._PlatformModule_2;
        }
        if ((token === import5.A11yModule)) {
            return this._A11yModule_3;
        }
        if ((token === import6.PortalModule)) {
            return this._PortalModule_4;
        }
        if ((token === import7.OverlayModule)) {
            return this._OverlayModule_5;
        }
        if ((token === import1.MdSidenavModule)) {
            return this._MdSidenavModule_6;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_7;
        }
        if ((token === import8.Platform)) {
            return this._Platform_8;
        }
        if ((token === import9.InteractivityChecker)) {
            return this._InteractivityChecker_9;
        }
        if ((token === import12.LiveAnnouncer)) {
            return this._LiveAnnouncer_10;
        }
        if ((token === import13.OverlayContainer)) {
            return this._OverlayContainer_11;
        }
        if ((token === import14.ScrollDispatcher)) {
            return this._ScrollDispatcher_12;
        }
        if ((token === import15.ViewportRuler)) {
            return this._ViewportRuler_13;
        }
        if ((token === import10.OverlayPositionBuilder)) {
            return this._OverlayPositionBuilder_14;
        }
        if ((token === import11.Overlay)) {
            return this._Overlay_15;
        }
        return notFoundResult;
    };
    MdSidenavModuleInjector.prototype.destroyInternal = function () {
    };
    return MdSidenavModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdSidenavModuleNgFactory = new import0.NgModuleFactory(MdSidenavModuleInjector, import1.MdSidenavModule);
var styles_MdSidenavContainer = [
    import16.styles,
    import17.styles
];
export var RenderType_MdSidenavContainer = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdSidenavContainer,
    data: {}
});
export function View_MdSidenavContainer_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'mat-sidenav-backdrop'
            ]
        ], [[
                2,
                'mat-sidenav-shown',
                null
            ]
        ], [[
                null,
                'click'
            ]
        ], function (v, en, $event) {
            var ad = true;
            var co = v.component;
            if (('click' === en)) {
                var pd_0 = (co._onBackdropClicked() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)),
        import0.ɵncd(null, 0),
        (l()(), import0.ɵeld(0, null, null, 3, 'div', [
            [
                'cdk-scrollable',
                ''
            ],
            [
                'class',
                'mat-sidenav-content'
            ]
        ], null, null, null, null, null)),
        import0.ɵdid(139264, null, 0, import2.NgStyle, [
            import0.KeyValueDiffers,
            import0.ElementRef,
            import0.Renderer
        ], { ngStyle: [
                0,
                'ngStyle'
            ]
        }, null),
        import0.ɵdid(106496, null, 0, import18.Scrollable, [
            import0.ElementRef,
            import14.ScrollDispatcher
        ], null, null),
        import0.ɵncd(null, 1)
    ], function (ck, v) {
        var co = v.component;
        var currVal_1 = co._getStyles();
        ck(v, 3, 0, currVal_1);
        ck(v, 4, 0);
    }, function (ck, v) {
        var co = v.component;
        var currVal_0 = co._isShowingBackdrop();
        ck(v, 0, 0, currVal_0);
    });
}
function View_MdSidenavContainer_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 2, 'md-sidenav-container', [], [
            [
                2,
                'mat-sidenav-container',
                null
            ],
            [
                2,
                'mat-sidenav-transition',
                null
            ]
        ], null, null, View_MdSidenavContainer_0, RenderType_MdSidenavContainer)),
        import0.ɵdid(548864, null, 1, import1.MdSidenavContainer, [
            [
                2,
                import19.Dir
            ],
            import0.ElementRef,
            import0.Renderer,
            import0.NgZone
        ], null, null),
        import0.ɵqud(301989888, 1, { _sidenavs: 1 })
    ], null, function (ck, v) {
        var currVal_0 = true;
        var currVal_1 = import0.ɵnov(v, 1)._enableTransitions;
        ck(v, 0, 0, currVal_0, currVal_1);
    });
}
export var MdSidenavContainerNgFactory = import0.ɵccf('md-sidenav-container, mat-sidenav-container', import1.MdSidenavContainer, View_MdSidenavContainer_Host_0, {}, { backdropClick: 'backdropClick' }, [
    'md-sidenav, mat-sidenav',
    '*'
]);
var styles_MdSidenav = [];
export var RenderType_MdSidenav = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_MdSidenav,
    data: {}
});
export function View_MdSidenav_0(l) {
    return import0.ɵvid(2, [
        import0.ɵqud(201326592, 1, { _focusTrap: 0 }),
        (l()(), import0.ɵeld(0, null, null, 2, 'cdk-focus-trap', [[
                'class',
                'mat-sidenav-focus-trap'
            ]
        ], null, null, null, import20.View_FocusTrap_0, import20.RenderType_FocusTrap)),
        import0.ɵdid(24576, [[
                1,
                4
            ]
        ], 0, import21.FocusTrap, [
            import9.InteractivityChecker,
            import0.NgZone
        ], { disabled: [
                0,
                'disabled'
            ]
        }, null),
        import0.ɵncd(0, 0)
    ], function (ck, v) {
        var co = v.component;
        var currVal_0 = co.isFocusTrapDisabled;
        ck(v, 2, 0, currVal_0);
    }, null);
}
function View_MdSidenav_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'md-sidenav', [[
                'tabIndex',
                '-1'
            ]
        ], [
            [
                2,
                'mat-sidenav',
                null
            ],
            [
                1,
                'align',
                0
            ],
            [
                2,
                'mat-sidenav-closed',
                null
            ],
            [
                2,
                'mat-sidenav-closing',
                null
            ],
            [
                2,
                'mat-sidenav-end',
                null
            ],
            [
                2,
                'mat-sidenav-opened',
                null
            ],
            [
                2,
                'mat-sidenav-opening',
                null
            ],
            [
                2,
                'mat-sidenav-over',
                null
            ],
            [
                2,
                'mat-sidenav-push',
                null
            ],
            [
                2,
                'mat-sidenav-side',
                null
            ],
            [
                2,
                'mat-sidenav-invalid',
                null
            ]
        ], [
            [
                null,
                'transitionend'
            ],
            [
                null,
                'keydown'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('transitionend' === en)) {
                var pd_0 = (import0.ɵnov(v, 1)._onTransitionEnd($event) !== false);
                ad = (pd_0 && ad);
            }
            if (('keydown' === en)) {
                var pd_1 = (import0.ɵnov(v, 1).handleKeydown($event) !== false);
                ad = (pd_1 && ad);
            }
            return ad;
        }, View_MdSidenav_0, RenderType_MdSidenav)),
        import0.ɵdid(548864, null, 0, import1.MdSidenav, [
            import0.ElementRef,
            import0.Renderer
        ], null, null)
    ], null, function (ck, v) {
        var currVal_0 = true;
        var currVal_1 = null;
        var currVal_2 = import0.ɵnov(v, 1)._isClosed;
        var currVal_3 = import0.ɵnov(v, 1)._isClosing;
        var currVal_4 = import0.ɵnov(v, 1)._isEnd;
        var currVal_5 = import0.ɵnov(v, 1)._isOpened;
        var currVal_6 = import0.ɵnov(v, 1)._isOpening;
        var currVal_7 = import0.ɵnov(v, 1)._modeOver;
        var currVal_8 = import0.ɵnov(v, 1)._modePush;
        var currVal_9 = import0.ɵnov(v, 1)._modeSide;
        var currVal_10 = !import0.ɵnov(v, 1).valid;
        ck(v, 0, 1, [
            currVal_0,
            currVal_1,
            currVal_2,
            currVal_3,
            currVal_4,
            currVal_5,
            currVal_6,
            currVal_7,
            currVal_8,
            currVal_9,
            currVal_10
        ]);
    });
}
export var MdSidenavNgFactory = import0.ɵccf('md-sidenav, mat-sidenav', import1.MdSidenav, View_MdSidenav_Host_0, {
    align: 'align',
    mode: 'mode',
    disableClose: 'disableClose',
    opened: 'opened'
}, {
    onOpenStart: 'open-start',
    onOpen: 'open',
    onCloseStart: 'close-start',
    onClose: 'close',
    onAlignChanged: 'align-changed'
}, ['*']);
