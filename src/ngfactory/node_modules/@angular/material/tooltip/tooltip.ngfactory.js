/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '@angular/material/tooltip/tooltip';
import * as import2 from '@angular/material/core/portal/portal-directives';
import * as import3 from '@angular/material/core/overlay/overlay-directives';
import * as import4 from '@angular/material/core/compatibility/compatibility';
import * as import5 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import6 from '@angular/material/core/overlay/overlay';
import * as import7 from '@angular/material/core/overlay/overlay-container';
import * as import8 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import9 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import10 from './tooltip.css.shim.ngstyle';
import * as import11 from '@angular/material/core/rtl/dir';
var MdTooltipModuleInjector = (function (_super) {
    __extends(MdTooltipModuleInjector, _super);
    function MdTooltipModuleInjector(parent) {
        return _super.call(this, parent, [TooltipComponentNgFactory], []) || this;
    }
    Object.defineProperty(MdTooltipModuleInjector.prototype, "_OverlayContainer_4", {
        get: function () {
            if ((this.__OverlayContainer_4 == null)) {
                (this.__OverlayContainer_4 = import7.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import7.OverlayContainer, null)));
            }
            return this.__OverlayContainer_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltipModuleInjector.prototype, "_ScrollDispatcher_5", {
        get: function () {
            if ((this.__ScrollDispatcher_5 == null)) {
                (this.__ScrollDispatcher_5 = import8.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import8.ScrollDispatcher, null)));
            }
            return this.__ScrollDispatcher_5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltipModuleInjector.prototype, "_ViewportRuler_6", {
        get: function () {
            if ((this.__ViewportRuler_6 == null)) {
                (this.__ViewportRuler_6 = import9.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import9.ViewportRuler, null), this._ScrollDispatcher_5));
            }
            return this.__ViewportRuler_6;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltipModuleInjector.prototype, "_OverlayPositionBuilder_7", {
        get: function () {
            if ((this.__OverlayPositionBuilder_7 == null)) {
                (this.__OverlayPositionBuilder_7 = new import5.OverlayPositionBuilder(this._ViewportRuler_6));
            }
            return this.__OverlayPositionBuilder_7;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltipModuleInjector.prototype, "_Overlay_8", {
        get: function () {
            if ((this.__Overlay_8 == null)) {
                (this.__Overlay_8 = new import6.Overlay(this._OverlayContainer_4, this.componentFactoryResolver, this._OverlayPositionBuilder_7, this.parent.get(import0.ApplicationRef), this, this.parent.get(import0.NgZone)));
            }
            return this.__Overlay_8;
        },
        enumerable: true,
        configurable: true
    });
    MdTooltipModuleInjector.prototype.createInternal = function () {
        this._PortalModule_0 = new import2.PortalModule();
        this._OverlayModule_1 = new import3.OverlayModule();
        this._CompatibilityModule_2 = new import4.CompatibilityModule();
        this._MdTooltipModule_3 = new import1.MdTooltipModule();
        return this._MdTooltipModule_3;
    };
    MdTooltipModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.PortalModule)) {
            return this._PortalModule_0;
        }
        if ((token === import3.OverlayModule)) {
            return this._OverlayModule_1;
        }
        if ((token === import4.CompatibilityModule)) {
            return this._CompatibilityModule_2;
        }
        if ((token === import1.MdTooltipModule)) {
            return this._MdTooltipModule_3;
        }
        if ((token === import7.OverlayContainer)) {
            return this._OverlayContainer_4;
        }
        if ((token === import8.ScrollDispatcher)) {
            return this._ScrollDispatcher_5;
        }
        if ((token === import9.ViewportRuler)) {
            return this._ViewportRuler_6;
        }
        if ((token === import5.OverlayPositionBuilder)) {
            return this._OverlayPositionBuilder_7;
        }
        if ((token === import6.Overlay)) {
            return this._Overlay_8;
        }
        return notFoundResult;
    };
    MdTooltipModuleInjector.prototype.destroyInternal = function () {
    };
    return MdTooltipModuleInjector;
}(import0.ɵNgModuleInjector));
export var MdTooltipModuleNgFactory = new import0.NgModuleFactory(MdTooltipModuleInjector, import1.MdTooltipModule);
var styles_TooltipComponent = [import10.styles];
export var RenderType_TooltipComponent = import0.ɵcrt({
    encapsulation: 0,
    styles: styles_TooltipComponent,
    data: { 'animation': [{
                name: 'state',
                definitions: [
                    {
                        type: 0,
                        name: 'void',
                        styles: {
                            type: 6,
                            styles: { transform: 'scale(0)' }
                        }
                    },
                    {
                        type: 0,
                        name: 'initial',
                        styles: {
                            type: 6,
                            styles: { transform: 'scale(0)' }
                        }
                    },
                    {
                        type: 0,
                        name: 'visible',
                        styles: {
                            type: 6,
                            styles: { transform: 'scale(1)' }
                        }
                    },
                    {
                        type: 0,
                        name: 'hidden',
                        styles: {
                            type: 6,
                            styles: { transform: 'scale(0)' }
                        }
                    },
                    {
                        type: 1,
                        expr: '* => visible',
                        animation: {
                            type: 4,
                            styles: null,
                            timings: '150ms cubic-bezier(0.0, 0.0, 0.2, 1)'
                        }
                    },
                    {
                        type: 1,
                        expr: '* => hidden',
                        animation: {
                            type: 4,
                            styles: null,
                            timings: '150ms cubic-bezier(0.4, 0.0, 1, 1)'
                        }
                    }
                ]
            }
        ] }
});
export function View_TooltipComponent_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'div', [[
                'class',
                'mat-tooltip'
            ]
        ], [
            [
                4,
                'transform-origin',
                null
            ],
            [
                24,
                '@state',
                0
            ]
        ], [[
                null,
                '@state.done'
            ]
        ], function (v, en, $event) {
            var ad = true;
            var co = v.component;
            if (('@state.done' === en)) {
                var pd_0 = (co._afterVisibilityAnimation($event) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)),
        (l()(), import0.ɵted(null, [
            '',
            ''
        ]))
    ], null, function (ck, v) {
        var co = v.component;
        var currVal_0 = co._transformOrigin;
        var currVal_1 = co._visibility;
        ck(v, 0, 0, currVal_0, currVal_1);
        var currVal_2 = co.message;
        ck(v, 1, 0, currVal_2);
    });
}
function View_TooltipComponent_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'md-tooltip-component', [], null, [[
                'body',
                'click'
            ]
        ], function (v, en, $event) {
            var ad = true;
            if (('body:click' === en)) {
                var pd_0 = (import0.ɵnov(v, 1)._handleBodyInteraction() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, View_TooltipComponent_0, RenderType_TooltipComponent)),
        import0.ɵdid(24576, null, 0, import1.TooltipComponent, [
            [
                2,
                import11.Dir
            ],
            import0.ChangeDetectorRef
        ], null, null)
    ], null, null);
}
export var TooltipComponentNgFactory = import0.ɵccf('md-tooltip-component, mat-tooltip-component', import1.TooltipComponent, View_TooltipComponent_Host_0, {}, {}, []);
