/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '../../../../modules/transfer-state/browser-transfer-state.module';
import * as import2 from '../../../../modules/transfer-state/transfer-state';
var BrowserTransferStateModuleInjector = (function (_super) {
    __extends(BrowserTransferStateModuleInjector, _super);
    function BrowserTransferStateModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(BrowserTransferStateModuleInjector.prototype, "_TransferState_1", {
        get: function () {
            if ((this.__TransferState_1 == null)) {
                (this.__TransferState_1 = import1.getTransferState());
            }
            return this.__TransferState_1;
        },
        enumerable: true,
        configurable: true
    });
    BrowserTransferStateModuleInjector.prototype.createInternal = function () {
        this._BrowserTransferStateModule_0 = new import1.BrowserTransferStateModule();
        return this._BrowserTransferStateModule_0;
    };
    BrowserTransferStateModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import1.BrowserTransferStateModule)) {
            return this._BrowserTransferStateModule_0;
        }
        if ((token === import2.TransferState)) {
            return this._TransferState_1;
        }
        return notFoundResult;
    };
    BrowserTransferStateModuleInjector.prototype.destroyInternal = function () {
    };
    return BrowserTransferStateModuleInjector;
}(import0.ÉµNgModuleInjector));
export var BrowserTransferStateModuleNgFactory = new import0.NgModuleFactory(BrowserTransferStateModuleInjector, import1.BrowserTransferStateModule);
