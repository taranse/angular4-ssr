/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '@angular/core';
import * as import1 from '../../../../../app/materials-bclight/mdb-nav/mdb-nav.module';
import * as import2 from '@angular/common';
var MdbNavModuleInjector = (function (_super) {
    __extends(MdbNavModuleInjector, _super);
    function MdbNavModuleInjector(parent) {
        return _super.call(this, parent, [], []) || this;
    }
    Object.defineProperty(MdbNavModuleInjector.prototype, "_NgLocalization_2", {
        get: function () {
            if ((this.__NgLocalization_2 == null)) {
                (this.__NgLocalization_2 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID)));
            }
            return this.__NgLocalization_2;
        },
        enumerable: true,
        configurable: true
    });
    MdbNavModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._MdbNavModule_1 = new import1.MdbNavModule();
        return this._MdbNavModule_1;
    };
    MdbNavModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import1.MdbNavModule)) {
            return this._MdbNavModule_1;
        }
        if ((token === import2.NgLocalization)) {
            return this._NgLocalization_2;
        }
        return notFoundResult;
    };
    MdbNavModuleInjector.prototype.destroyInternal = function () {
    };
    return MdbNavModuleInjector;
}(import0.ÉµNgModuleInjector));
export var MdbNavModuleNgFactory = new import0.NgModuleFactory(MdbNavModuleInjector, import1.MdbNavModule);
